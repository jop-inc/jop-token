

/* Gallery (transitions) */

	.gallery {

		// Mixin.
			@mixin transition-gallery($event) {
				$x: null;
				$y: null;

				@if ($event == 'load') {
					$x: 'body.is-loading &';
					$y: _duration(on-load);
				}
				@else if ($event == 'scroll') {
					$x: '&.is-inactive';
					$y: _duration(on-scroll);
				}

				&.on#{$event}-fade-in {
					article {
						.image {
							img {
								@include vendor('transition', 'opacity #{$y} ease-in-out');
								@include vendor('transition-delay', '#{_misc(gallery-limit) * _duration(gallery-delay)}');
							}
						}

						@for $i from 0 through _misc(gallery-limit) {
							&:nth-child(#{$i + 1}) {
								.image {
									img {
										@include vendor('transition-delay', '#{$i * _duration(gallery-delay)}');
									}
								}
							}
						}
					}

					#{$x} {
						article {
							.image {
								img {
									opacity: 0;
								}
							}
						}
					}
				}
			}

		// On Load.
			@include transition-gallery('load');

		// On Scroll.
			@include transition-gallery('scroll');

	}

/* Gallery (style1) */

	.gallery.style1 {
		@include color-typography(invert);
		@include color-button(invert);
		@include vendor('align-items', 'center');
		@include vendor('display', 'flex');
		@include vendor('flex-wrap', 'wrap');
		@include vendor('justify-content', 'center');
		position: relative;
		width: 100%;
		background-color: transparent;

		> .forward, >.backward {
			display: none;
		}

		> .inner {
			@include vendor('align-items', 'inherit');
			@include vendor('display', 'inherit');
			@include vendor('flex-wrap', 'inherit');
			@include vendor('justify-content', 'inherit');
		}

		article {
			overflow: hidden;
			position: relative;
			width: 25%;

			.image {
				@include vendor('transition', 'opacity #{_duration(transition)} ease-in-out');
				display: block;
				width: 100%;
				border-radius: 0;

				img {
					display: block;
					width: 100%;
					border-radius: 0;
				}
			}

		}

		@include breakpoint(large) {
			article {
				width: (100% / 3);
			}
		}

		@include breakpoint(medium) {
			article {
				width: 50%;
			}
		}

		@include breakpoint(xsmall) {
			article {
				width: 100%;
			}
		}

		// Modifiers.

			// size
				&.small {
					article {
						width: 20%;
					}

					@include breakpoint(large) {
						article {
							width: 25%;
						}
					}

					@include breakpoint(medium) {
						article {
							width: (100% / 3);
						}
					}

					@include breakpoint(xsmall) {
						article {
							width: 50%;
						}
					}
				}

				&.medium {
					// ...
				}

				&.big {
					article {
						width: (100% / 3);
					}

					@include breakpoint(large) {
						article {
							width: 50%;
						}
					}

					@include breakpoint(medium) {
						article {
							width: 50%;
						}
					}

					@include breakpoint(xsmall) {
						article {
							width: 100%;
						}
					}
				}

	}

/* Gallery (style2) */

	.gallery.style2 {
		@include color-typography(invert);
		@include color-button(invert);
		@include vendor('display', 'flex');
		-webkit-overflow-scrolling: touch;
		position: relative;
		background-color: transparent;

		margin: 8rem 0;


		> .forward, >.backward {
			@include icon;
			@include vendor('transition', 'opacity #{_duration(transition)} ease-in-out');
			position: absolute;
			top: 0;
			width: 5rem;
			height: 100%;
			cursor: pointer;
			opacity: 0;
			z-index: 2;

			&:before {
				display: block;
				top: calc(50% - 1.5rem);
				width: 4rem;
				height: 3rem;
				line-height: 1em;
				font-size: 3rem;
				position: absolute;
				text-align: center;
			}
		}

		&:hover {
			> .forward, > .backward {
				opacity: 1;
			}
		}

		> .forward {
			right: 0;

			&:before {
				content: '';
				background: url(../../images/icons/carousel/forward.svg) no-repeat top left;
				background-size: contain;
				right: 0;
			}
		}

		> .backward {
			left: 0;

			&:before {
				content: '';
				background: url(../../images/icons/carousel/backward.svg) no-repeat top left;
				background-size: contain;
				right: 0;
			}
		}

		> .inner {
			@include vendor('display', 'inherit');
			overflow-x: auto;
			overflow-y: hidden;
			position: relative;
			width: 100%;
		}

		article {
			@include vendor('flex-grow', '0');
			@include vendor('flex-shrink', '0');
			display: block;
			position: relative;
			overflow: hidden;
			max-width: 75vw;



			.image {
				display: block;
				width: 100%;
				border-radius: 0;

				img {
					display: block;
					width: 100%;
					border-radius: 0;
				}
			}
		}


		// Modifiers.

			// size
				&.small {
					article {
						margin-left: 1rem;

						&:first-child {
							margin-left: 3rem;
						}
					}

				}

				&.medium {
					// ...
				}

				&.big {
					article {

						.caption {
							padding: 4rem;
						}
					}

				}

	}

// Mixin

	@mixin color-gallery($p: null) {
		.gallery {
			article {
				.image {
					background-color: transparentize(_palette($p, fg-bold), 0.875);
				}
			}
		}
	}

	@include color-gallery;
